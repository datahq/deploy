global:
  namespace: datahub
  serverName: testing.datahub.io

auth:
  # kubectl create secret generic auth-testing --from-literal=DATABASE_URL= \
                                       # --from-literal=EXTERNAL_ADDRESS= \
                                       # --from-literal=GITHUB_KEY= \
                                       # --from-literal=GITHUB_SECRET= \
                                       # --from-literal=GOOGLE_KEY= \
                                       # --from-literal=GUNICORN_PORT= \
                                       # --from-literal=GOOGLE_SECRET= \
                                       # --from-literal=INSTALLED_EXTENSIONS= \
                                       # --from-literal=MAILCHIMP_LIST_ID= \
                                       # --from-literal=MAILCHIMP_SECRET= \
                                       # --from-literal=MAILCHIMP_USER= \
                                       # --from-literal= \
                                       # --from-literal=
  secretName: auth-testing
filemanager:
  # kubectl create secret generic filemanager-testing --from-literal=DATABASE_URL=
  secretName: filemanager-testing
metastore:
  # kubectl create secret generic metastore-testing --from-literal=DATAHUB_ELASTICSEARCH_ADDRESS= \
  #                                                 --from-literal=PRIVATE_KEY=
  secretName: metastore-testing
nginx:
  enableLoadBalancer: true
  # gcloud --project=datahub-k8s  compute addresses create datahub-nginx-production (region: 13)
  # gcloud --project=datahub-k8s  compute addresses describe datahub-nginx-production | grep ^address:
  loadBalancerIP: 35.225.241.192
  # prevents nginx from scheduling on the same node as auth
  enableAntiAffinity: true
plans:
  # kubectl create secret generic plans-testing --from-literal=BASIC_AUTH_PASSWORD= \
  #                                     --from-literal=DATABASE_URL= \
  #                                     --from-literal=BASIC_AUTH_USERNAME= \
  #                                     --from-literal=GUNICORN_PORT= \
  #                                     --from-literal=SESSION_SECRET_KEY= \
  #                                     --from-literal=VIRTUAL_HOST=
  secretName: plans-testing
rawstore:
  # kubectl create secret generic rawstore-testing --from-literal=AUTH_SERVER= \
  #                                        --from-literal=DATABASE_URL= \
  #                                        --from-literal=STORAGE_ACCESS_KEY_ID= \
  #                                        --from-literal=STORAGE_SECRET_ACCESS_KEY= \
  #                                        --from-literal=STORAGE_BUCKET_NAME= \
  #                                        --from-literal=STORAGE_PATH_PATTERN= \
  #                                        --from-literal=VIRTUAL_HOST=
  secretName: rawstore-testing
resolver:
  # kubectl create secret generic resolver-testing --from-literal=AUTH_SERVER= \
  #                                        --from-literal=VIRTUAL_HOST=
  secretName: resolver-testing
specstore:
  # kubectl create secret generic specstore-testing --from-literal=AUTH_SERVER= \
  #                                         --from-literal=DATABASE_URL= \
  #                                         --from-literal=AWS_ACCESS_KEY_ID= \
  #                                         --from-literal=AWS_SECRET_ACCESS_KEY= \
  #                                         --from-literal=DATASETS_INDEX_NAME= \
  #                                         --from-literal=DPP_ELASTICSEARCH= \
  #                                         --from-literal=EVENTS_ELASTICSEARCH_HOST= \
  #                                         --from-literal=EVENTS_INDEX_NAME= \
  #                                         --from-literal=FILEMANAGER_DATABASE_URL= \
  #                                         --from-literal=PKGSTORE_BUCKET= \
  #                                         --from-literal=VIRTUAL_HOST=
  secretName: specstore-testing
factory:
  # kubectl create secret generic factory-testing --from-literal=DATAHUB_ENV=
  secretName: factory-testing
