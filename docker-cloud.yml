proxy:
  restart: always
  image: 'dockercloud/haproxy:latest'
  links:
    - frontend
    - auth
    - rawstore
    - specstore
    - resolver
    - metastore
    - plans
  ports:
    - '80:80'
  roles:
    - global
  tags:
    - ${PROJECT}-${STAGE}
frontend:
  autoredeploy: false
  restart: always
  image: datopian/frontend:latest
  ports:
    - "4000"
  environment:
    VIRTUAL_HOST: ${DOMAIN},https://${DOMAIN}
    SITE_URL: https://${DOMAIN}
    API_URL: https://${DOMAIN_API}
    BITSTORE_URL: https://${PKGSTORE_BUCKET}
    AUTH_UR: http://auth:8000/
    FLOWMANAGER_URL: http://specstore:8000/
    METASTORE_URL: http://metastore:8000/
    RESOLVER_URL: http://resolver:8000/
    FILEMANAGER_URL: http://filemanager:8000
    STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
    STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
  tags:
    - ${PROJECT}-${STAGE}
auth:
  autoredeploy: false
  restart: always
  image: datopian/auth-datahub
  ports:
    - "8000"
  target_num_containers: 1
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/auth/*
    GUNICORN_PORT: 8000
    DATABASE_URL: ${RDS_URI}
    EXTERNAL_ADDRESS: ${DOMAIN_API}
    PRIVATE_KEY:
    PUBLIC_KEY:
    GOOGLE_KEY: ${GOOGLE_KEY}
    GOOGLE_SECRET: ${GOOGLE_SECRET}
    GITHUB_KEY:
    GITHUB_SECRET:
    MAILCHIMP_USER: ${MAILCHIMP_USER}
    MAILCHIMP_SECRET: ${MAILCHIMP_SECRET}
    MAILCHIMP_LIST_ID: ${MAILCHIMP_LIST_ID}
    ALLOWED_SERVICES: ${ALLOWED_SERVICES}
    INSTALLED_EXTENSIONS: ${INSTALLED_EXTENSIONS}
  tags:
    - ${PROJECT}-${STAGE}
plans:
  autoredeploy: false
  restart: always
  image: datopian/plans
  ports:
    - "8000"
  target_num_containers: 1
  environment:
      VIRTUAL_HOST: ${DOMAIN_API}/plans/*,${DOMAIN_API}/plans
      DATABASE_URL: ${RDS_URI}
      GUNICORN_PORT: 8000
      # Pick something secret for production!
      BASIC_AUTH_USERNAME: ${PLANS_ADMIN_USERNAME}
      BASIC_AUTH_PASSWORD: ${PLANS_ADMIN_PASSWORD}
      SESSION_SECRET_KEY: ${PLANS_SESSION_SECRET_KEY}
  tags:
    - ${PROJECT}-${STAGE}
rawstore:
  autoredeploy: false
  restart: always
  image: 'datopian/bitstore:latest'
  ports:
    - '8000'
  target_num_containers: 1
  links:
    - auth
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/rawstore/*
    AUTH_SERVER: http://auth:8000
    STORAGE_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
    STORAGE_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
    STORAGE_BUCKET_NAME: ${RAWSTORE_BUCKET}
    STORAGE_PATH_PATTERN: '{md5_hex}{extension}'
    DATABASE_URL: ${RDS_URI}
  tags:
    - ${PROJECT}-${STAGE}

specstore:
  autoredeploy: false
  restart: always
  links:
    - auth
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/source/*
    DATASETS_INDEX_NAME: datahub
    EVENTS_INDEX_NAME: events
    AUTH_SERVER: auth:8000
    DATABASE_URL:  ${RDS_URI}
    EVENTS_ELASTICSEARCH_HOST: ${ELASTICEARCH_URI}
    FILEMANAGER_DATABASE_URL: ${RDS_URI}
    DPP_ELASTICSEARCH: ${ELASTICEARCH_URI}
    PKGSTORE_BUCKET: ${PKGSTORE_BUCKET}
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
  expose:
    - '8000'
  image: 'datopian/specstore:latest'
  tags:
    - ${STAGE}-flowmanager

resolver:
  autoredeploy: false
  restart: always
  image: 'datopian/resolver:latest'
  ports:
    - '8000'
  links:
    - auth
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/resolver/*
    AUTH_SERVER: http://auth:8000
  tags:
    - ${PROJECT}-${STAGE}
metastore:
  autoredeploy: false
  restart: always
  image: 'datopian/metastore:latest'
  ports:
    - '8000'
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/metastore/*
    DATAHUB_ELASTICSEARCH_ADDRESS: ${ELASTICEARCH_URI}
    PRIVATE_KEY:
  tags:
    - ${PROJECT}-${STAGE}
filemanager:
  autoredeploy: false
  restart: always
  image: 'datopian/filemanager:latest'
  ports:
    - '8000${FILEMANAGER_EXPOSE_PORT}'
  environment:
    DATABASE_URL: ${RDS_URI}
  tags:
    - ${PROJECT}-${STAGE}
